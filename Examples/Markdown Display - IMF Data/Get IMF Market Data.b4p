#!/usr/local/bin/b4p

// Runs under Windows and LINUX.

{

	echo("Following program downloads key economic data and does some preconditioning");
	echo("It just takes a very small number of statements (ca 15) to generate great results", new line );

	file download overwrite	( "http://www.imf.org/external/pubs/ft/weo/2019/02/weodata/WEOOct2019all.xls", Marketinfo.csv );
	table load 		(data, Marketinfo.csv, tab); 	// Is a tab separated file
	file delete		( Marketinfo.csv ); 		// No longer needed.

	echo("Start the watch ...", new line);

	watch start; // Start stopwatch here to avoid unfair impact of internet trafic while downloading.

	echo("Clean up messy number format ...", new line);

	table process( data, for all parameters( filter([data:..,0], 1900..2999 ), year[] )
	{
		 year[] = literal(year[]);
		 if ([year[]] <> "n/a","") [year[]] = clean numeral( [year[]] ); // Clean up numbers, e.g. remove unnecessary thousand separators
	}  );

	echo("Save the market info in readable form ...", new line);
	table save( data, All Marketinfo out.csv );

	echo("Retrieve GDP growth data for all countries ...", new line);

	// Identify past 10 years by picking up the years from header row and choosing the right most items.
	// Note: Years are numerals, not literals.  Pay attention when using them to reference columns - not to confuse headers with column numbers

	// The function deep(...) applies the function literal (...) for every parameter element inside 'past 10 years[]' to convert
	// numbers to literals.  Alternative, you can use: for all parameters( past 10 years[] ... ) and implement it in a loop.


	past 10 years[] 		= deep( literal, { right( filter([data:..,0], 1900..2999 ), 10)  } );
	table keep columns		( data, { Country, Subject Descriptor, Units } + past 10 years[] ); 
	table keep selected rows	( data, [Subject Descriptor] == 'Gross domestic product, constant prices' & [Units] = 'Percent change' );
	table delete columns		( data, { Subject Descriptor, Units } );


	// Make the value look like true percent figures (add '%' behind before saving), but skip the rows without data ('n/a' inside).
	// The function 'table process' takes a piece of code as 2nd parameter and runs it for every row.
	// Inside the code, specifying the column name or number is sufficient to access the data.


	table process 	( data, for all parameters( past 10 years[], year[] ) 
				{
					if ( [year[]] != 'n/a') [year[]] = literal( [year[]]/100, '0.00%' ); // Format as true percent figure
				} );


	table save( data, Market info GDP growth out.csv ); 		// No quotation marks needed if string has no special characters or more than 1 consecutive space

	echo("Done.  Required just ", watch stop()/1000, " seconds to complete", new line);

}

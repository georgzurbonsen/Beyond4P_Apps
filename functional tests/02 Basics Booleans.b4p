{




    echo("Demonstration of some basic functionality with booleans", new line );

    table initialize ( sub  menu,
		{ { Menu Choice,Menu Explanation,				Menu Selection		},
		  { 0,	"Boolean: Introduction"					,	intro		},
		  { 1,	"Boolan: Unary, Binary and Assignment Operators"	,	bool ops	},
		  { 2,	"Boolean: Ad hoc Operators"				,	ad hoc		},
		  { 3,	"Boolean: Conditional statements"			,	conditional	},
		  { M,	"Back to previous menu"					,	back		},
		  { I,	"Interactive (city and countries tables loaded)"	,	interactive	} } );

    do
    {

	echo( new line );
	selection[] = table menu quick( sub menu, Menu Choice, Menu Explanation, Menu Selection );

 	switch( selection[])
	{

	    case(intro) // Introduction
	    {
		echo("Demonstration of different ways of specifying numerals, see following examples in the code.", new line);


		dim( a[], 25, "Nothing" );	// Define an array (12 elements, initialzed with "Nothing")

		// Example of true values

		a[ 0] = true;			// Correct.  Specify true and false in lower case letters
		a[ 1] = 1 = 1;			// Comparison
		a[ 2] = 3 > 2;			// Comparison
		a[ 3] = boolean(TRUE);		// Literal 'true'
		a[ 4] = boolean(Wahr);		// Literal
		a[ 5] = boolean(Yes);		// Literal
		a[ 6] = boolean(1);		// Numeral not zero
		a[ 7] = boolean(date(today));	// Date and time
		a[ 8] = boolean({ 1,2,3 });	// Parameter set: Not empty.
		a[ 9] = boolean(true);		// Boolean value stays boolean.

		// Example of false values

		a[10] = false;			// Correct.  Specify true and false in lower case letters
		a[11] = 1 <> 1;			// Comparison
		a[12] = 3 < 2;			// Comparison
		a[13] = boolean(FALSE);		// Literal 'true'
		a[14] = boolean(Falsch);		// Literal
		a[15] = boolean(No);		// Literal
		a[16] = boolean(0);		// Numeral not zero
		a[17] = boolean("");		// Date and time
		a[18] = boolean({ });		// Parameter set: Not empty.
		a[19] = boolean(false);		// Boolean value stays boolean.

		// Example of values which are not Boolean

		a[20] = True;
		a[21] = TRUE;
		a[22] = False;
		a[23] = FALSE;
		a[24] = '1 = 1';


		for (i[]=0, i[]<member count(a[]), i[]++)
		{
		    if ( mod(i[],10)=0 ) echo;	// Additional blank row at every 10th value
		    echo("a[", i[], "] = ",a[i[]],"   Type: ", type detailed(a[i[]]) ); 
		}


	    }


	    case(bool ops) // Operators
	    {
		echo("Demonstration of boolean binary operators.");

		echo(tab, "Bool 1", tab, "Bool 2", tab, "AND", tab, "OR", tab, "EQV", tab, "XOR", tab, ">", tab, "Not Or", tab, "Add", tab, "Mul" );
		for (i[] = 0, i[] <=3, i[]++)
		{
		    bool1[] = i[] >= 2;	// true if 2, 3
		    bool2[] = odd(i[]);	// true if 1, 3

		    echo(tab, bool1[], tab, bool2[], 
			 tab, bool1[] & bool2[], 
			 tab, bool1[] | bool2[], 
			 tab, bool1[] == bool2[], 
			 tab, bool1[] != bool2[],
			 tab, bool1[] > bool2[],
			 tab, !(bool1[] | bool2[]), 
			 tab, bool1[] + bool2[],		// Arithemtic operators: Implicit conversion to 0 and 1	
			 tab, bool1[] * bool2[] ); 		// Same here.
		}


		echo(new line, "Demonstration of boolean unary operators.");

		echo(tab, "Bool 1", tab, "NOT", tab, "Neg.", tab, "Pos." );
		for (i[] = 0, i[] <=1, i[]++)
		{
		    bool1[] = odd(i[]);	// true if 1, 3

		    echo(tab,  bool1[], 
			 tab, !bool1[], 
			 tab, -bool1[], 			// Arithemtic operators: Implicit conversion to 0 and 1	
			 tab, +bool1[]  ); 			// Same here.
		}


	    }


	    case(ad hoc) // Ad hoc Operators
	    {


		echo("Demonstration of ad hoc operators:", new line);

		a[] = true;	b[] = false;

		a[]++; b[]++;

		echo("After ++: a[]=", a[], " and b[]=", b[] ); 

		a[] = true;	b[] = false;

		a[]--; b[]--;
		echo("After --: a[]=", a[], " and b[]=", b[] ); 



	    }

	    case(conditional) // Input format
	    {

		echo("Demonstration conditional statements with boleans (based if second is odd or not)", new line);

		for (i[] = 1, i[] < 10, i[]++)
		{
		    a[] = odd( i[] ); 
		    b[] = mod( i[],3 ) == 0; // Divisible by 3



		    print("i[]=", i[],":" );
		    if (a[])	// You can put the conditional values directly into the if statement.
		    {
		        print(tab, "Odd  number");
		    }
		    else
		    {
		        print(tab, "Even number");
		    }

		    unless(b[])  // Opposite of if(..)
 		    {
		        echo(tab, " and not divisble by 3");
		    }
		    else
		    {
		        echo(tab, " and divisible by 3");
		    }
		}

	    }



	}
	echo(new line, "Test done.  Continue with menu");
    }
    while (selection[] <> interactive, back);

    if (selection[] = interactive) { interactive; exit; }


}
once
{
	define procedure ( foo )
	{
	    echo("The function name is ", function name[] );

	    if (existing(alt[])) // Applies if the additional procedure 'bar' has been defined
	    {
		echo(new line, "Function 'bar' with parameter = ", alt[]," has been called");
	    }
	    else
	    {
		echo(new line, "Function 'foo' has been called.");
	    }
	}


	define additional procedure( bar, foo, {{ alt, literal }} );


	define function ( p, { { a, numeral }, { b, numeral } } )
	{
	    return( 1/(1/a[] + 1/b[]) );
	}
}



{

    echo("Demonstration of exception functions", new line );

    table initialize ( sub  menu,
		{ { Menu Choice,Menu Explanation,					Menu Selection		},
		  { 0,	"Simple function call"					,	simple call		},
		  { 1,	"Call additionally defined function"			,	addtl call		},
		  { 2,	"Delete and redefine fuunction	"			,	redefine		},
		  { M,	"Back to previous menu"					,	back			},
		  { I,	"Interactive (city and countries tables loaded)"	,	interactive	} } );


    do
    {

	echo( new line );
	selection[] = table menu quick( sub menu, Menu Choice, Menu Explanation, Menu Selection );


 	switch( selection[])
	{

	    case(simple call) // Simple function call
	    {
		echo("Calling function 'foo' ");
		foo;
		echo("Calculating parallel(2,3): ", p(2,3) );
		echo("Calculating parallel(3,4): ", p(3,4) );
	    }


	    case(addtl call)
	    {
		echo("Calling function 'bar' ");
		bar("salad bar");
	    }

	    case(redefine)
	    {
		delete user function( foo );
		echo("Foo has been deleted.  Call bar if code still exists");
		bar("snack bar");
		define procedure( foo ) { echo("New 'foo' code. Function name = ", function name[] ); }
		foo; // New code
		bar("desert bar"); // Old code
	    }


	}
	echo(new line, "Test done.  Continue with menu");
    }
    while (selection[] <> interactive, back);

    if (selection[] = interactive) { interactive; exit; }


}

// Demonstrate 'table serialize'

{
	table initialize( t, 
	{	{ Identification,  Article Category,   Q1 Orders,Q2 Orders,Q3 Orders,Q4 Orders,Q1 Revenues,Q2 Revenues,Q3 Revenues,Q4 Revenues	},
		{ Food,           Food articles,      100,      101,      102,      103,      110,        111,        112,        113		},
		{ Near food,      Near food articles, 30,       31,       0,        32,        33,         34,         0,          0,		},
		{ Services,       Service offerings,  40,       41,       "",       "",       42 /* Try a short table row */        		},
		{ Nonfood,        Non food articles,  "",       "",       51,       52,       "",         "",         "",         53,           } 
	} );


    echo("Demonstration of basic table serialize function", new line );

    table initialize ( sub  menu,
		{ { Menu Choice,Menu Explanation,				Menu Selection		},
		  { 1,	"Simple serialization on years"				,	serialize 1	},
		  { 2,	"Simple serialization with header template"		,	serialize 2	},
		  { 3,	"Serialize 2 different categories"			,	serialize 3	},
		  { 4,	"Like above, but serialize all data even if blank"	,	serialize 4	},
		  { 5,	"Like above, but do nto serialize blanks and zeros"	,	serialize 5	},

		  { M,	"Back to previous menu"					,	back		},
		  { I,	"Interactive (city and countries tables loaded)"	,	interactive	} } );

    do
    {

	echo( new line );
	selection[] = table menu quick( sub menu, Menu Choice, Menu Explanation, Menu Selection );

	table copy table( t, u ); // Use contents in table u.

 	switch( selection[])
	{

	    case (serialize 1)
	    {
		count[] = table serialize( u, Identification, Quarters, {Q1 Orders,Q2 Orders,Q3 Orders, Q4 Orders}, Order Intake );
		table delete columns( u, [u::'*Revenues',0] );
		echo("Number of headers serialized ", count[]);
	    }

	    case (serialize 2)
	    {
		count[] = table serialize( u, Identification, Quarters , {Q1,Q2,Q3,Q4}, Revenues, "[Sequence] Orders" );
		// The last parameter combines sequence with ' Orders' and therefore expects 'Q1 Orders', 'Q2 Orders', etc.

		table delete columns( u, [u::'*Revenues',0] );
		echo("Number of headers serialized ", count[]);
	    }

	    case (serialize 3)
	    {
		count[] = table serialize( u, Identification, Quarters, {Q1,Q2,Q3,Q4}, {Revenues, Orders},"[Sequence] [Category]" );
		// The last parameter combines creates header names expected, startin with "Q1 Reveneus", ending with "Q4 Orders".

		echo("Number of headers serialized ", count[]);
	    }

	    case (serialize 4)
	    {
		count[] = table serialize all( u, Identification, Quarters, {Q1,Q2,Q3,Q4}, {Revenues, Orders},"[Sequence] [Category]" );
		// The last parameter combines creates header names expected, startin with "Q1 Reveneus", ending with "Q4 Orders".

		echo("Number of headers serialized ", count[]);
	    }

	    case (serialize 5)
	    {
		count[] = table serialize ignore zero( u, Identification, Quarters, {Q1,Q2,Q3,Q4}, {Revenues, Orders},"[Sequence] [Category]" );
		// The last parameter combines creates header names expected, startin with "Q1 Reveneus", ending with "Q4 Orders".

		echo("Number of headers serialized ", count[]);
	    }

	}

	if ( selection[] <> back,interactive )
	{
		echo("Serialized table will be stored as 'Serialized Out.csv'. Open it to take a look.");
		table save( u, Serialized Out.csv);
		pause;
	}


	echo(new line, "Test done.  Continue with menu");
    }
    while (selection[] <> interactive, back);

    if (selection[] = interactive) { interactive; exit; }

}

